#!/usr/bin/env python3
import numpy as np
import rospy

from trajectory_msgs.msg import JointTrajectory, JointTrajectoryPoint
from control_msgs.msg import FollowJointTrajectoryActionGoal

traj_states =  [(2.2410335457029205, 2.816951186180262, 3.5541107138047776, 1.3378698662699502, -0.207085307, 4.022068863696378, 5.031459114793775), (2.162141237629006, 2.778152894355952, 3.5161537626411667, 1.3777456947660875, -0.1865689627559474, 4.0249405147111466, 5.031554589057389), (2.063525977384654, 2.729655160546322, 3.468707599285745, 1.427590268817107, -0.16092367711852315, 4.028530046341983, 5.0316739312858), (1.9983537903353534, 2.697604253127868, 3.437351727005537, 1.460531327616183, -0.14397530621997118, 4.030902294015255, 5.031752801723055), (1.9346287981924042, 2.666265056200307, 3.4066921334745537, 1.492740911772099, -0.1274032817425595, 4.033221864964329, 5.0318299208061585), (1.8549725362726601, 2.627091039895894, 3.3683676332817103, 1.5330029198327937, -0.10668822776511783, 4.036121334402316, 5.031926319762151), (1.7480739693921383, 2.5745196206762597, 3.316936209567408, 1.5870343940462497, -0.07888873796766514, 4.040012393314643, 5.032055686661088), (1.7000050131073785, 2.5508883004659797, 3.293808482498874, 1.6113197606874772, -0.06639900738699558, 4.041759187379746, 5.032113811092103), (1.6399016220160039, 2.5213299531541145, 3.26489135056614, 1.6416991048666918, -0.050768528700368826, 4.0439470058651805, 5.0321865485607), (1.6095446535155484, 2.506400305994114, 3.2502859291348605, 1.6570435050885708, -0.042873459230825806, 4.045052147762668, 5.032223288692456), (1.5775328716146262, 2.4889421289364595, 3.234733673109996, 1.6758971345367148, -0.03282075394881068, 4.046563771471509, 5.032269641790252), (1.530841441048402, 2.4667683318264277, 3.212292525775617, 1.6981450002174856, -0.021572470238770472, 4.048085980523662, 5.032322223211674), (1.5083264641375325, 2.4557330363726697, 3.201465050223284, 1.7094715856494869, -0.01575106009153848, 4.048898695506383, 5.032349321333356), (1.5317448455397835, 2.464964033832695, 3.2133801039097345, 1.7055353737922532, -0.017389277670813465, 4.048802319283153, 5.0323399790068635), (1.5228623817969174, 2.46025584648002, 3.2092165486228783, 1.7112628723363943, -0.01438100321924508, 4.049241504458582, 5.032353684988805), (1.5570619283010292, 2.476646049066499, 3.226485026110579, 1.706567276081845, -0.01776091372523462, 4.048699405747945, 5.032335737267459), (1.6229479948654548, 2.5561939523465815, 3.2620671966995594, 1.7444704611017738, -0.01770623295749413, 4.046375037429833, 5.032327283853402), (1.6015004097610832, 2.569916446405783, 3.2528454868628365, 1.7867485050245082, -0.0060446247739646235, 4.0466386988049035, 5.032378048025702), (1.627345664691206, 2.589131634617541, 3.266020028550918, 1.7878334390010338, -0.008500224719509694, 4.045975172893772, 5.032364743999649), (1.650876862730055, 2.6119486944921118, 3.278179800673134, 1.791429923239183, -0.010700419846960052, 4.045281360628928, 5.032352654990438), (1.621829170691902, 2.6054905611775565, 3.2642128395840158, 1.8115121317768617, -0.002479945853521591, 4.04627713164428, 5.032390574512925), (1.5414421128911195, 2.5543281517217005, 3.2245346572663105, 1.8320621412916847, 0.012978106915013525, 4.048994486537301, 5.032465095283001)]

def go_to_point(point, traj_pub, time=1):
    """
    Drives robot to point point, and sleeps until completion
    """
    goal = FollowJointTrajectoryActionGoal()
    trajectory = JointTrajectory()
    trajectory.joint_names = [f"j2s7s300_joint_{i}" for i in range(1,8)]
    trajectory_point = JointTrajectoryPoint()
    trajectory_point.time_from_start = rospy.Duration(secs=time)
    trajectory_point.positions = point
    trajectory.points.append(trajectory_point)
    goal.goal.trajectory = trajectory
    traj_pub.publish(goal)
    rospy.sleep(time)

if __name__ == "__main__":
    rospy.init_node("calibration", anonymous=True)

    traj_pub = rospy.Publisher(f"/jaco_trajectory_controller/follow_joint_trajectory/goal", 
        FollowJointTrajectoryActionGoal, queue_size=1)

    input('Enter to drive to start')
    go_to_point(traj_states[0], traj_pub, time=3)
    
    for pt in traj_states:
        input("Enter to drive to next point")
        go_to_point(pt, traj_pub)